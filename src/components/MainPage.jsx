import React, { useState, useEffect } from 'react';
import {
    CheckCircleIcon,
    ClockIcon,
    CalendarIcon,
} from '@heroicons/react/outline';
import SignatureBlock from './SignatureBlock';

const roadmap = [
    {
        date: 'Jan 16, 2025',
        title: '–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞',
        description: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∑–∞–ø—É—â–µ–Ω!',
        status: 'completed',
    },
    {
        date: 'Jul 18, 2025',
        title: 'AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç',
        description:
            '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –Ω–∞ —Å–∞–π—Ç. –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏ –ø–æ–º–æ—â—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.',
        status: 'completed',
    },
    {
        date: 'Sep 1, 2025',
        title: '–†–∞–∑–¥–µ–ª —Å –∏–≥—Ä–∞–º–∏ –∏ –≤–Ω—É—Ç—Ä–∏—Å–∞–π—Ç–æ–≤—ã–π –±–∞–Ω–∫',
        description:
            '–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –º–∏–Ω–∏-–∏–≥—Ä—ã, —Ä–µ–π—Ç–∏–Ω–≥–∏. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–≥–æ –±–∞–Ω–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.',
        status: 'current',
    },
    {
        date: 'Oct 15, 2025',
        title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ-–±–∏—Ä–∂–∏',
        description:
            '–ó–∞–ø—É—Å–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫—Ä–∏–ø—Ç–æ-–±–∏—Ä–∂–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ —Ç–æ–∫–µ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: —Ç–æ—Ä–≥–æ–≤–ª—è, —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ–±–º–µ–Ω –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã.',
        status: 'upcoming',
    },
    {
        date: 'Dec 1, 2025',
        title: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        description:
            '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –Ω–∞ Android –∏ iOS.',
        status: 'upcoming',
    },
    {
        date: 'Jan 20, 2026',
        title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
        description:
            '–ó–∞–ø—É—Å–∫ —Ä–∞–∑–¥–µ–ª–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: —á–∞—Ç—ã, —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –ª–∏—á–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏. –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.',
        status: 'upcoming',
    },
    {
        date: 'Mar 5, 2026',
        title: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
        description:
            '–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ —É—Å–ª—É–≥–∞–º–∏ –∑–∞ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—É—é –≤–∞–ª—é—Ç—É –∏–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏.',
        status: 'upcoming',
    },
    {
        date: 'Apr 25, 2026',
        title: '–°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
        description:
            '–í–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤—ã–±–æ—Ä –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.',
        status: 'upcoming',
    },
    {
        date: 'Jun 15, 2026',
        title: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
        description:
            '–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –∫—É—Ä—Å–∞–º–∏ –∏ —É—Ä–æ–∫–∞–º–∏ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–∏–∑–∞–π–Ω, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.',
        status: 'upcoming',
    },
    {
        date: 'Aug 1, 2026',
        title: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏',
        description:
            '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –æ—Ñ—Ñ–ª–∞–π–Ω-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –í—Å—Ç—Ä–µ—á–∏, –∫–æ–Ω–∫—É—Ä—Å—ã –∏ –Ω–∞–≥—Ä–∞–¥—ã.',
        status: 'upcoming',
    },
    {
        date: 'Sep 20, 2026',
        title: 'NFT-–≥–∞–ª–µ—Ä–µ—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
        description:
            '–ó–∞–ø—É—Å–∫ NFT-–≥–∞–ª–µ—Ä–µ–∏, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –≤—ã—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã, –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –∏–º–∏.',
        status: 'upcoming',
    },
    {
        date: 'Nov 10, 2026',
        title: '–ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤',
        description:
            '–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ù–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã, —Å–∫–∏–¥–∫–∏ –∏ –±–æ–Ω—É—Å—ã –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.',
        status: 'upcoming',
    },
    {
        date: 'Dec 31, 2026',
        title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≥—Ä–∞–¥',
        description:
            '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≥—Ä–∞–¥ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: —Ä–µ–π—Ç–∏–Ω–≥–∏, —Ç—Ä–æ—Ñ–µ–∏, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
        status: 'upcoming',
    },
    {
        date: 'Feb 14, 2027',
        title: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
        description:
            '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ —Å–∞–π—Ç–µ: –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –∫–æ–Ω–∫—É—Ä—Å—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã.',
        status: 'upcoming',
    },
];

const MainPage = () => {
    const [searchQuery, setSearchQuery] = useState('');
    const [selectedStage, setSelectedStage] = useState(null);
    const [progressWidth, setProgressWidth] = useState(0);

    const completedStages = roadmap.filter(
        (s) => s.status === 'completed',
    ).length;

    useEffect(() => {
        const timeout = setTimeout(() => {
            setProgressWidth((completedStages / roadmap.length) * 100);
        }, 100);
        return () => clearTimeout(timeout);
    }, [completedStages]);

    const filtered = roadmap.filter((s) =>
        s.title.toLowerCase().includes(searchQuery.toLowerCase()),
    );

    const getStatusStyle = (status) => {
        switch (status) {
            case 'completed':
                return 'bg-green-500';
            case 'current':
                return 'bg-blue-500';
            default:
                return 'bg-gray-500';
        }
    };

    return (
        <div className="min-h-screen text-white py-16 px-4 flex flex-col items-center">
            <div className="text-center max-w-2xl mb-12 bg-white/5 backdrop-blur-md rounded-xl px-6 py-4 shadow-lg border border-white/10">
                <h1 className="text-4xl font-bold mb-2">
                    üìç Roadmap: Community Progress
                </h1>
                <p className="text-zinc-300 text-sm">
                    –°–ª–µ–¥–∏ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º. –î–∞—Ç—ã –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å—Å—è üòÑ
                </p>
            </div>

            <div className="mb-10 w-full max-w-md">
                <input
                    type="text"
                    placeholder="–ü–æ–∏—Å–∫ —ç—Ç–∞–ø–∞..."
                    className="w-full px-5 py-3 rounded-xl bg-white/10 backdrop-blur-md border border-white/10 shadow-inner text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                    onChange={(e) => setSearchQuery(e.target.value)}
                />
            </div>

            <div className="w-full max-w-4xl h-4 rounded-full overflow-hidden mb-14 border border-white/10 bg-white/10 backdrop-blur-md shadow-inner">
                <div
                    className="bg-gradient-to-r from-green-400 via-lime-400 to-green-500 h-full transition-all duration-700 ease-in-out"
                    style={{ width: `${progressWidth}%` }}
                ></div>
            </div>

            <div className="grid gap-8 sm:grid-cols-1 md:grid-cols-2 xl:grid-cols-3 w-full max-w-6xl">
                {filtered.map((stage, i) => (
                    <div
                        key={i}
                        onClick={() => setSelectedStage(stage)}
                        className="relative bg-white/10 backdrop-blur-lg border border-white/10 p-6 rounded-2xl shadow-lg hover:shadow-2xl hover:scale-[1.015] transition-transform cursor-pointer"
                    >
                        <div
                            className={`absolute -top-5 -left-5 w-10 h-10 rounded-full flex items-center justify-center ${getStatusStyle(
                                stage.status,
                            )}`}
                        >
                            {stage.status === 'completed' && (
                                <CheckCircleIcon className="w-5 h-5 text-white" />
                            )}
                            {stage.status === 'current' && (
                                <ClockIcon className="w-5 h-5 text-white" />
                            )}
                            {stage.status === 'upcoming' && (
                                <CalendarIcon className="w-5 h-5 text-white" />
                            )}
                        </div>
                        <h3 className="text-lg font-semibold mb-1">
                            {stage.title}
                        </h3>
                        <p className="text-sm text-gray-300 mb-3">
                            {stage.date}
                        </p>
                        <p className="text-sm text-gray-200">
                            {stage.description}
                        </p>
                        <span className="absolute bottom-3 right-3 text-[10px] px-3 py-1 bg-white/10 border border-white/10 rounded-full text-gray-300 uppercase">
                            {stage.status === 'completed'
                                ? 'Completed'
                                : stage.status === 'current'
                                ? 'Current'
                                : 'Upcoming'}
                        </span>
                    </div>
                ))}
            </div>

            {/* –ú–æ–¥–∞–ª–∫–∞ */}
            {selectedStage && (
                <div
                    className="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50"
                    onClick={() => setSelectedStage(null)}
                >
                    <div
                        className="bg-white/10 border border-white/10 backdrop-blur-xl p-8 rounded-2xl max-w-md w-full text-white shadow-xl"
                        onClick={(e) => e.stopPropagation()}
                    >
                        <h2 className="text-2xl font-bold mb-4">
                            {selectedStage.title}
                        </h2>
                        <p className="text-sm text-gray-300 mb-6">
                            {selectedStage.description}
                        </p>
                        <button
                            onClick={() => setSelectedStage(null)}
                            className="px-5 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-500 transition"
                        >
                            –ó–∞–∫—Ä—ã—Ç—å
                        </button>
                    </div>
                </div>
            )}

            <div className="mt-20 w-full max-w-5xl">
                <SignatureBlock />
            </div>
        </div>
    );
};

export default MainPage;
